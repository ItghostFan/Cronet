// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/interned_data/interned_data.proto

#include "protos/perfetto/trace/interned_data/interned_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace perfetto {
namespace protos {
PROTOBUF_CONSTEXPR InternedData::InternedData(
    ::_pbi::ConstantInitialized)
  : event_categories_()
  , event_names_()
  , debug_annotation_names_()
  , source_locations_()
  , function_names_()
  , frames_()
  , callstacks_()
  , build_ids_()
  , mapping_paths_()
  , source_paths_()
  , mappings_()
  , log_message_body_()
  , profiled_frame_symbols_()
  , vulkan_memory_keys_()
  , graphics_contexts_()
  , gpu_specifications_()
  , histogram_names_()
  , kernel_symbols_()
  , debug_annotation_value_type_names_()
  , unsymbolized_source_locations_()
  , debug_annotation_string_values_()
  , packet_context_(){}
struct InternedDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternedDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternedDataDefaultTypeInternal() {}
  union {
    InternedData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternedDataDefaultTypeInternal _InternedData_default_instance_;
}  // namespace protos
}  // namespace perfetto
namespace perfetto {
namespace protos {

// ===================================================================

class InternedData::_Internal {
 public:
};

void InternedData::clear_event_categories() {
  event_categories_.Clear();
}
void InternedData::clear_event_names() {
  event_names_.Clear();
}
void InternedData::clear_debug_annotation_names() {
  debug_annotation_names_.Clear();
}
void InternedData::clear_debug_annotation_value_type_names() {
  debug_annotation_value_type_names_.Clear();
}
void InternedData::clear_source_locations() {
  source_locations_.Clear();
}
void InternedData::clear_unsymbolized_source_locations() {
  unsymbolized_source_locations_.Clear();
}
void InternedData::clear_log_message_body() {
  log_message_body_.Clear();
}
void InternedData::clear_histogram_names() {
  histogram_names_.Clear();
}
void InternedData::clear_build_ids() {
  build_ids_.Clear();
}
void InternedData::clear_mapping_paths() {
  mapping_paths_.Clear();
}
void InternedData::clear_source_paths() {
  source_paths_.Clear();
}
void InternedData::clear_function_names() {
  function_names_.Clear();
}
void InternedData::clear_profiled_frame_symbols() {
  profiled_frame_symbols_.Clear();
}
void InternedData::clear_mappings() {
  mappings_.Clear();
}
void InternedData::clear_frames() {
  frames_.Clear();
}
void InternedData::clear_callstacks() {
  callstacks_.Clear();
}
void InternedData::clear_vulkan_memory_keys() {
  vulkan_memory_keys_.Clear();
}
void InternedData::clear_graphics_contexts() {
  graphics_contexts_.Clear();
}
void InternedData::clear_gpu_specifications() {
  gpu_specifications_.Clear();
}
void InternedData::clear_kernel_symbols() {
  kernel_symbols_.Clear();
}
void InternedData::clear_debug_annotation_string_values() {
  debug_annotation_string_values_.Clear();
}
void InternedData::clear_packet_context() {
  packet_context_.Clear();
}
InternedData::InternedData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned),
  event_categories_(arena),
  event_names_(arena),
  debug_annotation_names_(arena),
  source_locations_(arena),
  function_names_(arena),
  frames_(arena),
  callstacks_(arena),
  build_ids_(arena),
  mapping_paths_(arena),
  source_paths_(arena),
  mappings_(arena),
  log_message_body_(arena),
  profiled_frame_symbols_(arena),
  vulkan_memory_keys_(arena),
  graphics_contexts_(arena),
  gpu_specifications_(arena),
  histogram_names_(arena),
  kernel_symbols_(arena),
  debug_annotation_value_type_names_(arena),
  unsymbolized_source_locations_(arena),
  debug_annotation_string_values_(arena),
  packet_context_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.InternedData)
}
InternedData::InternedData(const InternedData& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      event_categories_(from.event_categories_),
      event_names_(from.event_names_),
      debug_annotation_names_(from.debug_annotation_names_),
      source_locations_(from.source_locations_),
      function_names_(from.function_names_),
      frames_(from.frames_),
      callstacks_(from.callstacks_),
      build_ids_(from.build_ids_),
      mapping_paths_(from.mapping_paths_),
      source_paths_(from.source_paths_),
      mappings_(from.mappings_),
      log_message_body_(from.log_message_body_),
      profiled_frame_symbols_(from.profiled_frame_symbols_),
      vulkan_memory_keys_(from.vulkan_memory_keys_),
      graphics_contexts_(from.graphics_contexts_),
      gpu_specifications_(from.gpu_specifications_),
      histogram_names_(from.histogram_names_),
      kernel_symbols_(from.kernel_symbols_),
      debug_annotation_value_type_names_(from.debug_annotation_value_type_names_),
      unsymbolized_source_locations_(from.unsymbolized_source_locations_),
      debug_annotation_string_values_(from.debug_annotation_string_values_),
      packet_context_(from.packet_context_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.InternedData)
}

inline void InternedData::SharedCtor() {
}

InternedData::~InternedData() {
  // @@protoc_insertion_point(destructor:perfetto.protos.InternedData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InternedData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InternedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InternedData::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.InternedData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_categories_.Clear();
  event_names_.Clear();
  debug_annotation_names_.Clear();
  source_locations_.Clear();
  function_names_.Clear();
  frames_.Clear();
  callstacks_.Clear();
  build_ids_.Clear();
  mapping_paths_.Clear();
  source_paths_.Clear();
  mappings_.Clear();
  log_message_body_.Clear();
  profiled_frame_symbols_.Clear();
  vulkan_memory_keys_.Clear();
  graphics_contexts_.Clear();
  gpu_specifications_.Clear();
  histogram_names_.Clear();
  kernel_symbols_.Clear();
  debug_annotation_value_type_names_.Clear();
  unsymbolized_source_locations_.Clear();
  debug_annotation_string_values_.Clear();
  packet_context_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* InternedData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .perfetto.protos.EventCategory event_categories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_categories(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.EventName event_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_debug_annotation_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.SourceLocation source_locations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_source_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString function_names = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_function_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.Frame frames = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_frames(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.Callstack callstacks = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_callstacks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString build_ids = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_build_ids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString mapping_paths = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_mapping_paths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString source_paths = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_source_paths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.Mapping mappings = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_mappings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.LogMessageBody log_message_body = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_log_message_body(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_profiled_frame_symbols(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_vulkan_memory_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_graphics_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_gpu_specifications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<194>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.HistogramName histogram_names = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_histogram_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString kernel_symbols = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_kernel_symbols(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_debug_annotation_value_type_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_unsymbolized_source_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.InternedString debug_annotation_string_values = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_debug_annotation_string_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .perfetto.protos.NetworkPacketContext packet_context = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_packet_context(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InternedData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.InternedData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .perfetto.protos.EventCategory event_categories = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_categories_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_categories(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.EventName event_names = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_debug_annotation_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_debug_annotation_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.SourceLocation source_locations = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_source_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_source_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString function_names = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_function_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_function_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.Frame frames = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frames_size()); i < n; i++) {
    const auto& repfield = this->_internal_frames(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.Callstack callstacks = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_callstacks_size()); i < n; i++) {
    const auto& repfield = this->_internal_callstacks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString build_ids = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_build_ids_size()); i < n; i++) {
    const auto& repfield = this->_internal_build_ids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString mapping_paths = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mapping_paths_size()); i < n; i++) {
    const auto& repfield = this->_internal_mapping_paths(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString source_paths = 18;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_source_paths_size()); i < n; i++) {
    const auto& repfield = this->_internal_source_paths(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(18, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.Mapping mappings = 19;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mappings_size()); i < n; i++) {
    const auto& repfield = this->_internal_mappings(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(19, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.LogMessageBody log_message_body = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_log_message_body_size()); i < n; i++) {
    const auto& repfield = this->_internal_log_message_body(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_profiled_frame_symbols_size()); i < n; i++) {
    const auto& repfield = this->_internal_profiled_frame_symbols(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(21, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vulkan_memory_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_vulkan_memory_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_graphics_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_graphics_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(23, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_gpu_specifications_size()); i < n; i++) {
    const auto& repfield = this->_internal_gpu_specifications(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(24, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.HistogramName histogram_names = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_histogram_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_histogram_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString kernel_symbols = 26;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_kernel_symbols_size()); i < n; i++) {
    const auto& repfield = this->_internal_kernel_symbols(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(26, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_debug_annotation_value_type_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_debug_annotation_value_type_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(27, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unsymbolized_source_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_unsymbolized_source_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(28, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.InternedString debug_annotation_string_values = 29;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_debug_annotation_string_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_debug_annotation_string_values(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(29, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .perfetto.protos.NetworkPacketContext packet_context = 30;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packet_context_size()); i < n; i++) {
    const auto& repfield = this->_internal_packet_context(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(30, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.InternedData)
  return target;
}

size_t InternedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.InternedData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.EventCategory event_categories = 1;
  total_size += 1UL * this->_internal_event_categories_size();
  for (const auto& msg : this->event_categories_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.EventName event_names = 2;
  total_size += 1UL * this->_internal_event_names_size();
  for (const auto& msg : this->event_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;
  total_size += 1UL * this->_internal_debug_annotation_names_size();
  for (const auto& msg : this->debug_annotation_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.SourceLocation source_locations = 4;
  total_size += 1UL * this->_internal_source_locations_size();
  for (const auto& msg : this->source_locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString function_names = 5;
  total_size += 1UL * this->_internal_function_names_size();
  for (const auto& msg : this->function_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.Frame frames = 6;
  total_size += 1UL * this->_internal_frames_size();
  for (const auto& msg : this->frames_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.Callstack callstacks = 7;
  total_size += 1UL * this->_internal_callstacks_size();
  for (const auto& msg : this->callstacks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString build_ids = 16;
  total_size += 2UL * this->_internal_build_ids_size();
  for (const auto& msg : this->build_ids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString mapping_paths = 17;
  total_size += 2UL * this->_internal_mapping_paths_size();
  for (const auto& msg : this->mapping_paths_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString source_paths = 18;
  total_size += 2UL * this->_internal_source_paths_size();
  for (const auto& msg : this->source_paths_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.Mapping mappings = 19;
  total_size += 2UL * this->_internal_mappings_size();
  for (const auto& msg : this->mappings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.LogMessageBody log_message_body = 20;
  total_size += 2UL * this->_internal_log_message_body_size();
  for (const auto& msg : this->log_message_body_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;
  total_size += 2UL * this->_internal_profiled_frame_symbols_size();
  for (const auto& msg : this->profiled_frame_symbols_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;
  total_size += 2UL * this->_internal_vulkan_memory_keys_size();
  for (const auto& msg : this->vulkan_memory_keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;
  total_size += 2UL * this->_internal_graphics_contexts_size();
  for (const auto& msg : this->graphics_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;
  total_size += 2UL * this->_internal_gpu_specifications_size();
  for (const auto& msg : this->gpu_specifications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.HistogramName histogram_names = 25;
  total_size += 2UL * this->_internal_histogram_names_size();
  for (const auto& msg : this->histogram_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString kernel_symbols = 26;
  total_size += 2UL * this->_internal_kernel_symbols_size();
  for (const auto& msg : this->kernel_symbols_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;
  total_size += 2UL * this->_internal_debug_annotation_value_type_names_size();
  for (const auto& msg : this->debug_annotation_value_type_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;
  total_size += 2UL * this->_internal_unsymbolized_source_locations_size();
  for (const auto& msg : this->unsymbolized_source_locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.InternedString debug_annotation_string_values = 29;
  total_size += 2UL * this->_internal_debug_annotation_string_values_size();
  for (const auto& msg : this->debug_annotation_string_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.NetworkPacketContext packet_context = 30;
  total_size += 2UL * this->_internal_packet_context_size();
  for (const auto& msg : this->packet_context_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternedData::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const InternedData*>(
      &from));
}

void InternedData::MergeFrom(const InternedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.InternedData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  event_categories_.MergeFrom(from.event_categories_);
  event_names_.MergeFrom(from.event_names_);
  debug_annotation_names_.MergeFrom(from.debug_annotation_names_);
  source_locations_.MergeFrom(from.source_locations_);
  function_names_.MergeFrom(from.function_names_);
  frames_.MergeFrom(from.frames_);
  callstacks_.MergeFrom(from.callstacks_);
  build_ids_.MergeFrom(from.build_ids_);
  mapping_paths_.MergeFrom(from.mapping_paths_);
  source_paths_.MergeFrom(from.source_paths_);
  mappings_.MergeFrom(from.mappings_);
  log_message_body_.MergeFrom(from.log_message_body_);
  profiled_frame_symbols_.MergeFrom(from.profiled_frame_symbols_);
  vulkan_memory_keys_.MergeFrom(from.vulkan_memory_keys_);
  graphics_contexts_.MergeFrom(from.graphics_contexts_);
  gpu_specifications_.MergeFrom(from.gpu_specifications_);
  histogram_names_.MergeFrom(from.histogram_names_);
  kernel_symbols_.MergeFrom(from.kernel_symbols_);
  debug_annotation_value_type_names_.MergeFrom(from.debug_annotation_value_type_names_);
  unsymbolized_source_locations_.MergeFrom(from.unsymbolized_source_locations_);
  debug_annotation_string_values_.MergeFrom(from.debug_annotation_string_values_);
  packet_context_.MergeFrom(from.packet_context_);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void InternedData::CopyFrom(const InternedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.InternedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternedData::IsInitialized() const {
  return true;
}

void InternedData::InternalSwap(InternedData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  event_categories_.InternalSwap(&other->event_categories_);
  event_names_.InternalSwap(&other->event_names_);
  debug_annotation_names_.InternalSwap(&other->debug_annotation_names_);
  source_locations_.InternalSwap(&other->source_locations_);
  function_names_.InternalSwap(&other->function_names_);
  frames_.InternalSwap(&other->frames_);
  callstacks_.InternalSwap(&other->callstacks_);
  build_ids_.InternalSwap(&other->build_ids_);
  mapping_paths_.InternalSwap(&other->mapping_paths_);
  source_paths_.InternalSwap(&other->source_paths_);
  mappings_.InternalSwap(&other->mappings_);
  log_message_body_.InternalSwap(&other->log_message_body_);
  profiled_frame_symbols_.InternalSwap(&other->profiled_frame_symbols_);
  vulkan_memory_keys_.InternalSwap(&other->vulkan_memory_keys_);
  graphics_contexts_.InternalSwap(&other->graphics_contexts_);
  gpu_specifications_.InternalSwap(&other->gpu_specifications_);
  histogram_names_.InternalSwap(&other->histogram_names_);
  kernel_symbols_.InternalSwap(&other->kernel_symbols_);
  debug_annotation_value_type_names_.InternalSwap(&other->debug_annotation_value_type_names_);
  unsymbolized_source_locations_.InternalSwap(&other->unsymbolized_source_locations_);
  debug_annotation_string_values_.InternalSwap(&other->debug_annotation_string_values_);
  packet_context_.InternalSwap(&other->packet_context_);
}

std::string InternedData::GetTypeName() const {
  return "perfetto.protos.InternedData";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::InternedData*
Arena::CreateMaybeMessage< ::perfetto::protos::InternedData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::InternedData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
