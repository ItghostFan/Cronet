// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: omnibox_input_type.proto

#include "omnibox_input_type.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace metrics {
}  // namespace metrics
namespace metrics {
bool OmniboxInputType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> OmniboxInputType_strings[6] = {};

static const char OmniboxInputType_names[] =
  "DEPRECATED_FORCED_QUERY"
  "DEPRECATED_REQUESTED_URL"
  "EMPTY"
  "QUERY"
  "UNKNOWN"
  "URL";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry OmniboxInputType_entries[] = {
  { {OmniboxInputType_names + 0, 23}, 5 },
  { {OmniboxInputType_names + 23, 24}, 2 },
  { {OmniboxInputType_names + 47, 5}, 0 },
  { {OmniboxInputType_names + 52, 5}, 4 },
  { {OmniboxInputType_names + 57, 7}, 1 },
  { {OmniboxInputType_names + 64, 3}, 3 },
};

static const int OmniboxInputType_entries_by_number[] = {
  2, // 0 -> EMPTY
  4, // 1 -> UNKNOWN
  1, // 2 -> DEPRECATED_REQUESTED_URL
  5, // 3 -> URL
  3, // 4 -> QUERY
  0, // 5 -> DEPRECATED_FORCED_QUERY
};

const std::string& OmniboxInputType_Name(
    OmniboxInputType value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          OmniboxInputType_entries,
          OmniboxInputType_entries_by_number,
          6, OmniboxInputType_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      OmniboxInputType_entries,
      OmniboxInputType_entries_by_number,
      6, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     OmniboxInputType_strings[idx].get();
}
bool OmniboxInputType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, OmniboxInputType* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      OmniboxInputType_entries, 6, name, &int_value);
  if (success) {
    *value = static_cast<OmniboxInputType>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace metrics
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
